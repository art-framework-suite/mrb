# No magic #!, this script must be sourced!

# NOTICE: this script is not relocatable

#
#  Begin boilerplate.
#

# Note: All the following special tricks for $_ must continue
#       relaying the value to the next rule.  Be careful!
# Special trick to nail the value of $_ down in a variety of shells.
echo $_ >& /dev/null
# Special trick for tcsh which is one-off on the command history stack.
: $_
# Special trick to capture the value of $_ in zsh and bash
test $?shell$_ != 1$_ >& /dev/null && \
    dollar_underscore="$_" && \
    dollar_underscore=`expr "${dollar_underscore}" : ".\(.*\)"`
# Special trick to capture the value of $_ in tcsh
test $?shell = 1 && set dollar_underscore=`echo $_`

# First, we must source the umbrella (Filled in with a template)
setup %NNN%

# Get the shell independence aliases and functions.
source "${MRB_DIR}/bin/shell_independence"

# Capture the value of $0
set_ dollar_zed=`echo "${0}" | sed -e 's/^-//'`

# Special tricks to figure out if this script has been sourced.
# Works for bash, tcsh, and in some cases for zsh.
set_ is_sourced=false
ifcsh_
    # Note: It is unfortunate that we must hard-code the name
    #       of this script here, but there is no other way
    #       that works, tcsh is brain-dead.
    set base=`basename "${dollar_zed}"`
    test "${base}" != "setup" && \
        set is_sourced=true
else
    # Special trick for zsh.
    test "${ZSH_NAME}" && test "${dollar_underscore}" = "${dollar_zed}" && \
        is_sourced=true
    # If there were arguments then there is no safe way to find out
    # whether or not the script was sourced in zsh.  Pretend it was.
    test "${ZSH_NAME}" && test "${#argv}" != "0" && \
        is_sourced=true
    # Special trick for bash.
    test "${BASH}" && test "${BASH_SOURCE}" != "${dollar_zed}" && \
        is_sourced=true
# Warning, this must be here because the tcsh parser is brain-dead.
endif
endifcsh_

#
#  End of boilerplate.  Begin of real work.
#

set_ msg1='ERROR: You MUST setup the ups product!'

tnotnull UPS_DIR || ( echo "" ; echo "${msg1}" ; echo "" )
tnotnull UPS_DIR || source "${MRB_DIR}/bin/unset_shell_independence"
tnotnull UPS_DIR || unset me db dollar_underscore dollar_zed is_sourced base msg1 flav
tnotnull UPS_DIR || return


tnotnull MRB_DIR || ( echo ""; echo "ERROR: You must first setup mrb!" )
tnotnull MRB_DIR || source "${MRB_DIR}/bin/unset_shell_independence"
tnotnull MRB_DIR || unset me db dollar_underscore dollar_zed is_sourced base msg1 flav
tnotnull MRB_DIR || return 1

