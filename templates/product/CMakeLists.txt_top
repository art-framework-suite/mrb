# ======================================================================
#  main build file
# ======================================================================


# use cmake 2.8 or later
cmake_minimum_required (VERSION 2.8)

project(%%PD%%)

# cetbuildtools contains our cmake modules
et( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
if( NOT CETBUILDTOOLS_VERSION )
  message( FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules" )
endif()
set( CMAKE_MODULE_PATH $ENV{CETBUILDTOOLS_DIR}/Modules ${CMAKE_MODULE_PATH} )

# art contains cmake modules that we use
set( ART_VERSION $ENV{ART_VERSION} )
if( NOT ART_VERSION )
  message( FATAL_ERROR "ERROR: setup art to get the cmake modules" )
endif()
set( CMAKE_MODULE_PATH $ENV{ART_DIR}/Modules ${CMAKE_MODULE_PATH} )

# Include the necessary macros
include(CetCMakeEnv)
include(BuildPlugins)
include(ArtMake)
#include(FindUpsGeant4)

# Set compiler flags
cet_set_compiler_flags( DIAGS VIGILANT WERROR
   EXTRA_FLAGS -pedantic
   EXTRA_CXX_FLAGS -std=c++11
)

cet_report_compiler_flags()

# Locate some UPS areas (the versions are just minimum required) and setup include paths
# These are needed for Art stuff
find_ups_product(cetbuildtools v3_07_08)
#find_ups_product(gm2ringsim v0_0_1)
#find_ups_product(artg4 v0_0_1)
find_ups_product(art v1_08_10 )
find_ups_product(fhiclcpp v2_17_12)
find_ups_product(messagefacility v1_10_26)

# Make sure we have gcc
cet_check_gcc()

# Macros for art_make and simple plugins
include(ArtDictionary)

# ADD SOURCE CODE SUBDIRECTORIES HERE
add_subdirectory(  )
# subdirectory for test code
add_subdirectory(test)
# ups - table and config files
add_subdirectory(ups)

# packaging utility
include(UseCPack)
